/*
 * generated by Xtext 2.23.0
 */
package game.of.life.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import game.of.life.dSL.Game

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class DSLGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val game = resource.allContents.head as Game;
		println(game);
		fsa.generateFile('RulesOfLife.java', '''package GameOfLife;

	import java.awt.Point;
	import java.util.ArrayList;''' 
	+ addDecls(game) 
	+ addMarkings(game) 
	+
'''    public class RulesOfLife {
		public static void computeSurvivors(boolean[][] gameBoard, ArrayList<Point> survivingCells) {
        	// Iterate through the array, follow game of life rules
       	 for (int i=1; i<gameBoard.length-1; i++) {
            for (int j=1; j<gameBoard[0].length-1; j++) {
                int surrounding = 0;
                if (gameBoard[i-1][j-1]) { surrounding++; }
                if (gameBoard[i-1][j])   { surrounding++; }
                if (gameBoard[i-1][j+1]) { surrounding++; }
                if (gameBoard[i][j-1])   { surrounding++; }
                if (gameBoard[i][j+1])   { surrounding++; }
                if (gameBoard[i+1][j-1]) { surrounding++; }
                if (gameBoard[i+1][j])   { surrounding++; }
                if (gameBoard[i+1][j+1]) { surrounding++; }
                /* only code for surviving cells, so no rule if result is dead cell */
                 /* rule B3 */''' 
                 + addRules(game) + '''
        	}
		}
	}''')
	}
	
	def static addDecls(Game game) '''"\n"
		// Custom pattern declarations
		«FOR d: game.decls AFTER "\n"»
		Point[] «d.pat.name» = {«FOR p: d.pat.pointList SEPARATOR ", "» new Point(«p.x»,«p.y») «ENDFOR»};
		«ENDFOR»
	'''
	
	def static addMarkings(Game game) ''''''
	
	def static addRules(Game game) ''''''
}
